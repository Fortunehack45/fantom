rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper Functions
    function isAdmin() {
      return request.auth != null && request.auth.token.email == 'fortunedomination@gmail.com';
    }
    
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    function isSignedIn() {
      return request.auth != null;
    }
    
    // User Profiles
    match /users/{userId} {
      allow get, list: if true;
      allow create: if isOwner(userId) && request.resource.data.uid == userId;
      allow update: if (isOwner(userId) && request.resource.data.verification == resource.data.verification) || isAdmin();
      allow delete: if isAdmin();

      // Social Features (Follow/Unfollow)
      match /followers/{followerId} {
          allow read: if true;
          allow write: if isOwner(followerId) || isAdmin();
      }
      match /following/{followingId} {
          allow read: if true;
          allow write: if isOwner(userId) || isAdmin();
      }
    }

    // Unique Usernames
    match /usernames/{username} {
      allow get: if true;
      allow create: if isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.username == username;
      allow delete: if (isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.username == username) || isAdmin();
    }

    // Blog Posts
    match /blogPosts/{postId} {
      allow get: if true;
      allow list: if true;
      allow create: if isSignedIn() && request.resource.data.authorId == request.auth.uid;
      allow update: if (isOwner(resource.data.authorId) && request.resource.data.authorId == resource.data.authorId) || isAdmin();
      allow delete: if isOwner(resource.data.authorId) || isAdmin();

      // Comments on Blog Posts
      match /comments/{commentId} {
        allow read: if true;
        allow create: if isSignedIn();
        allow delete: if isOwner(resource.data.authorId) || isAdmin();
        
        // Replies to Comments
        match /replies/{replyId} {
            allow read: if true;
            allow create: if isSignedIn();
            allow delete: if isOwner(resource.data.authorId) || isAdmin();
        }
      }
    }

    // Short Videos
    match /shorts/{shortId} {
      allow get: if true;
      allow list: if true;
      allow create: if isSignedIn() && request.resource.data.authorId == request.auth.uid;
      allow update: if (isOwner(resource.data.authorId) && request.resource.data.authorId == resource.data.authorId) || isAdmin();
      allow delete: if isOwner(resource.data.authorId) || isAdmin();

       // Comments on Shorts
      match /comments/{commentId} {
        allow read: if true;
        allow create: if isSignedIn();
        allow delete: if isOwner(resource.data.authorId) || isAdmin();
      }
    }

    // Private Chats
    match /chats/{chatId} {
      allow read, write, update: if isSignedIn() && request.auth.uid in resource.data.users;
      allow get, list: if isAdmin(); // Admin can see metadata, but not messages
      
      match /messages/{messageId} {
        allow read, create: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.users;
        // No update/delete for chat messages to maintain integrity
      }
    }
    
    // Verification Requests
    match /verificationRequests/{requestId} {
      allow create: if isOwner(request.resource.data.userId);
      allow read, update, delete: if isAdmin();
    }
    
    // Site Management (Admin Only)
    match /roster/{memberId} {
        allow get, list: if true;
        allow create, update, delete: if isAdmin();
    }
     match /announcements/{announcementId} {
        allow get, list: if true;
        allow create, update, delete: if isAdmin();
    }
     match /games/{gameId} {
        allow get, list: if true;
        allow create, update, delete: if isAdmin();
    }
     match /heroImages/{imageId} {
        allow get, list: if true;
        allow create, update, delete: if isAdmin();
    }
     match /timelineEvents/{eventId} {
        allow get, list: if true;
        allow create, update, delete: if isAdmin();
    }
     match /coreValues/{valueId} {
        allow get, list: if true;
        allow create, update, delete: if isAdmin();
    }
     match /galleryImages/{imageId} {
        allow get, list: if true;
        allow create, update, delete: if isAdmin();
    }
    match /siteSettings/{settingsId} {
        allow get, list: if true;
        allow create, update, delete: if isAdmin();
    }
     match /pageContent/{pageId} {
        allow get, list: if true;
        allow create, update, delete: if isAdmin();
    }
  }
}
