rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is the owner of a resource
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Helper function to check if the user is an Admin
    function isAdmin() {
      return request.auth.token.email == 'fortunedomination@gmail.com';
    }

    // Users can be read by anyone, but only the user themselves or an admin can write.
    match /users/{userId} {
      allow read: if true;
      allow write: if isOwner(userId) || isAdmin();
      
      // Followers/Following can only be modified by the respective users
      match /followers/{followerId} {
        allow read: if true;
        allow write: if isOwner(followerId) || isAdmin();
      }
      match /following/{followingId} {
        allow read: if true;
        allow write: if isOwner(userId) || isAdmin();
      }
    }
    
    // Usernames collection to enforce uniqueness
    match /usernames/{username} {
        allow read: if true;
        allow create: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.username == username;
        allow delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.username == username;
    }

    // Blog posts can be read by anyone.
    // Create, update, delete only by the author or an admin.
    match /blogPosts/{postId} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.authorId == request.auth.uid;
      allow update, delete: if (resource.data.authorId == request.auth.uid) || isAdmin();
      
      // Comments can be read by anyone.
      // Create by any authenticated user.
      // Delete only by author or admin.
      match /comments/{commentId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow delete: if (resource.data.authorId == request.auth.uid) || isAdmin();
        
        match /replies/{replyId} {
            allow read: if true;
            allow create: if request.auth != null;
            allow delete: if (resource.data.authorId == request.auth.uid) || isAdmin();
        }
      }
    }

    // Shorts can be read by anyone.
    // Create, update, delete only by the author or an admin.
    match /shorts/{shortId} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.authorId == request.auth.uid;
      allow update, delete: if (resource.data.authorId == request.auth.uid) || isAdmin();
       // Comments on shorts
      match /comments/{commentId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow delete: if (resource.data.authorId == request.auth.uid) || isAdmin();
      }
    }

    // Chats can only be read or written to by participants or an admin.
    match /chats/{chatId} {
      allow read, write: if request.auth.uid in resource.data.users || isAdmin();
      
      // Messages within a chat follow the same rule.
      match /messages/{messageId} {
        allow read, write: if get(/databases/$(database)/documents/chats/$(chatId)).data.users.hasAny([request.auth.uid]) || isAdmin();
      }
    }
    
    // Verification requests can be created by the user, but only read/updated by an admin.
    match /verificationRequests/{requestId} {
        allow create: if isOwner(request.resource.data.userId);
        allow read, update, delete: if isAdmin();
    }

    // Publicly readable, admin-writable collections
    match /roster/{memberId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /announcements/{announcementId} {
      allow read: if true;
      allow write: if isAdmin();
    }
     match /games/{gameId} {
      allow read: if true;
      allow write: if isAdmin();
    }
     match /heroImages/{imageId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /timelineEvents/{eventId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /coreValues/{valueId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /galleryImages/{imageId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Site-wide settings, only admin can read/write
    match /siteSettings/{settingsId} {
      allow read, write: if isAdmin();
    }
    match /pageContent/{pageId} {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}