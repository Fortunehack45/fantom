rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for Admin role
    function isAdmin() {
      return request.auth != null && request.auth.token.email == 'fortunedomination@gmail.com';
    }

    // USER & USERNAME MANAGEMENT
    // /users/{userId} - Publicly readable, but only the user or an admin can write.
    match /users/{userId} {
      allow read;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if (request.auth != null && request.auth.uid == userId) || isAdmin();
      allow delete: if isAdmin();

      // FOLLOWERS & FOLLOWING
      // /users/{userId}/followers/{followerId}
      match /followers/{followerId} {
        allow read;
        allow write: if request.auth != null && request.auth.uid == followerId;
      }
      // /users/{userId}/following/{followingId}
      match /following/{followingId} {
        allow read;
        allow write: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // /usernames/{username} - Enforces unique usernames
    match /usernames/{username} {
      allow read;
      allow create: if request.auth != null && request.resource.data.uid == request.auth.uid;
      allow delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.username == username;
    }

    // PUBLIC CONTENT
    // /blogPosts/{postId} - Publicly readable, writeable by author or admin.
    match /blogPosts/{postId} {
      allow read;
      allow create: if request.auth != null && request.resource.data.authorId == request.auth.uid;
      allow update, delete: if (resource.data.authorId == request.auth.uid) || isAdmin();

      // COMMENTS & REPLIES
      // /blogPosts/{postId}/comments/{commentId}
      match /comments/{commentId} {
        allow read;
        allow create: if request.auth != null;
        allow update, delete: if (resource.data.authorId == request.auth.uid) || isAdmin();

        // /blogPosts/{postId}/comments/{commentId}/replies/{replyId}
        match /replies/{replyId} {
          allow read;
          allow create: if request.auth != null;
          allow update, delete: if (resource.data.authorId == request.auth.uid) || isAdmin();
        }
      }
    }

    // /shorts/{shortId} - Publicly readable, writeable by author or admin.
    match /shorts/{shortId} {
      allow read;
      allow create: if request.auth != null && request.resource.data.authorId == request.auth.uid;
      allow update, delete: if (resource.data.authorId == request.auth.uid) || isAdmin();

      // /shorts/{shortId}/comments/{commentId}
      match /comments/{commentId} {
        allow read;
        allow create: if request.auth != null;
        allow update, delete: if (resource.data.authorId == request.auth.uid) || isAdmin();
      }
    }

    // PRIVATE MESSAGING
    // /chats/{chatId} - Readable/writeable only by chat participants.
    match /chats/{chatId} {
      allow get, list: if request.auth != null && (request.auth.uid in resource.data.users || isAdmin());
      allow create, update: if request.auth != null && request.auth.uid in request.resource.data.users;
      allow delete: if isAdmin();
      
      // /chats/{chatId}/messages/{messageId}
      match /messages/{messageId} {
        allow read, create: if request.auth != null && get(/databases/$(database)/documents/chats/$(chatId)).data.users.hasAny([request.auth.uid]);
        allow update, delete: if isAdmin();
      }
    }

    // VERIFICATION SYSTEM
    // /verificationRequests/{requestId}
    match /verificationRequests/{requestId} {
      allow read, list, update, delete: if isAdmin();
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    // ADMIN-ONLY CONTENT (Site Wide & About Page)
    match /roster/{memberId} {
      allow read;
      allow write: if isAdmin();
    }
    match /announcements/{announcementId} {
      allow read;
      allow write: if isAdmin();
    }
    match /games/{gameId} {
      allow read;
      allow write: if isAdmin();
    }
    match /heroImages/{imageId} {
      allow read;
      allow write: if isAdmin();
    }
    match /timelineEvents/{eventId} {
        allow read;
        allow write: if isAdmin();
    }
    match /coreValues/{valueId} {
        allow read;
        allow write: if isAdmin();
    }
    match /galleryImages/{imageId} {
        allow read;
        allow write: if isAdmin();
    }
    match /siteSettings/{settingId} {
        allow read;
        allow write: if isAdmin();
    }
    match /pageContent/{pageId} {
        allow read;
        allow write: if isAdmin();
    }
  }
}