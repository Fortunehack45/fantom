
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for Admin role
    function isAdmin() {
      return request.auth != null && request.auth.token.email == 'fortunedomination@gmail.com';
    }

    // Publicly readable data
    match /roster/{memberId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /announcements/{announcementId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /games/{gameId} {
      allow read: if true;
      allow write: if isAdmin();
    }
     match /siteSettings/{settingsId} {
      allow read: if true;
      allow write: if isAdmin();
    }
     match /heroImages/{imageId} {
      allow read: if true;
      allow write: if isAdmin();
    }
     match /timelineEvents/{eventId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /coreValues/{valueId} {
      allow read: if true;
      allow write: if isAdmin();
    }
     match /galleryImages/{imageId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /pageContent/{pageId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Usernames: For checking uniqueness
    match /usernames/{username} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.uid == request.auth.uid;
      allow delete: if request.auth != null && resource.data.uid == request.auth.uid;
    }

    // User Profiles
    match /users/{userId} {
      // Anyone can view a user's profile and list users by username.
      allow get: if true;
      allow list: if true;

      // Only the user themselves can create their own document.
      allow create: if request.auth != null && request.auth.uid == userId;

      // A user can update their own profile, but cannot change their verification status.
      // The Admin can update any user's profile.
      allow update: if (request.auth != null && request.auth.uid == userId && request.resource.data.verification == resource.data.verification) || isAdmin();
      
      // Subcollections for followers/following
      match /followers/{followerId} {
        allow read: if true;
        allow write: if request.auth != null && (request.auth.uid == followerId || request.auth.uid == userId);
      }
      match /following/{followingId} {
        allow read: if true;
        allow write: if request.auth != null && request.auth.uid == userId;
      }
    }

    // Blog Posts
    match /blogPosts/{postId} {
      allow get: if true;
      allow list: if true;
      allow create: if request.auth != null && request.resource.data.authorId == request.auth.uid;
      allow update, delete: if (request.auth != null && resource.data.authorId == request.auth.uid) || isAdmin();

      // Comments on Blog Posts
      match /comments/{commentId} {
        allow read: if true;
        allow create: if request.auth != null && request.resource.data.authorId == request.auth.uid;
        allow delete: if (request.auth != null && resource.data.authorId == request.auth.uid) || isAdmin();

        // Replies to comments
        match /replies/{replyId} {
          allow read: if true;
          allow create: if request.auth != null && request.resource.data.authorId == request.auth.uid;
          allow delete: if (request.auth != null && resource.data.authorId == request.auth.uid) || isAdmin();
        }
      }
    }

    // Shorts
    match /shorts/{shortId} {
      allow get: if true;
      allow list: if true;
      allow create: if request.auth != null && request.resource.data.authorId == request.auth.uid;
      allow update, delete: if (request.auth != null && resource.data.authorId == request.auth.uid) || isAdmin();

      // Comments on Shorts
      match /comments/{commentId} {
         allow read: if true;
         allow create: if request.auth != null && request.resource.data.authorId == request.auth.uid;
         allow delete: if (request.auth != null && resource.data.authorId == request.auth.uid) || isAdmin();
      }
    }
    
    // Verification Requests
    match /verificationRequests/{requestId} {
      allow read, update, delete: if isAdmin();
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow list: if isAdmin();
    }
    
    // Private Messaging
    match /chats/{chatId} {
        allow get, update: if request.auth != null && request.auth.uid in resource.data.users || isAdmin();
        allow list: if request.auth != null && (('users' in resource.data && request.auth.uid in resource.data.users) || isAdmin());
        allow create: if request.auth != null && request.auth.uid in request.resource.data.users;

        match /messages/{messageId} {
            allow read, create: if request.auth != null && get(/databases/$(database)/documents/chats/$(chatId)).data.users.hasAny([request.auth.uid]);
        }
    }
  }
}
