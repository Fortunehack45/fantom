rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // HELPER FUNCTIONS
    function isAdmin() {
      return request.auth != null && request.auth.token.email == 'fortunedomination@gmail.com';
    }

    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    function isAuthor(docId, collectionName) {
      return get(/databases/$(database)/documents/$(collectionName)/$(docId)).data.authorId == request.auth.uid;
    }
    
    function isParticipant(chatId) {
        return isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.users;
    }

    // USER PROFILES & USERNAMES
    match /users/{userId} {
      allow get: if true;
      allow list: if true; // Allows querying the collection, e.g., for profile pages.

      allow create: if isOwner(userId)
                    && request.resource.data.uid == userId
                    && request.resource.data.username is string
                    && request.resource.data.username.size() >= 3
                    && request.resource.data.username.size() <= 15
                    && request.resource.data.username.matches('^[a-zA-Z0-9_]+$')
                    && !exists(/databases/$(database)/documents/usernames/$(request.resource.data.lowercaseUsername));

      allow update: if (isOwner(userId) && request.resource.data.verification == resource.data.verification) || isAdmin();
      
      allow delete: if isAdmin();
      
      // FOLLOWERS & FOLLOWING
      match /followers/{followerId} {
        allow read: if true;
        allow write: if isOwner(followerId) || isAdmin();
      }
      match /following/{followingId} {
        allow read: if true;
        allow write: if isOwner(userId) || isAdmin();
      }
    }
    
    match /usernames/{username} {
      allow read: if true;
      allow create: if isSignedIn()
                    && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.lowercaseUsername == username;
      allow delete: if isAdmin() || (exists(/databases/$(database)/documents/users/$(request.auth.uid)) && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.lowercaseUsername == username);
    }

    // CONTENT: BLOG POSTS & SHORTS
    match /blogPosts/{postId} {
      allow get: if true;
      allow list: if true;
      allow create: if isSignedIn() && request.resource.data.authorId == request.auth.uid;
      allow update: if (isSignedIn() && isAuthor(postId, 'blogPosts')) || isAdmin();
      allow delete: if (isSignedIn() && isAuthor(postId, 'blogPosts')) || isAdmin();

      // COMMENTS & REPLIES
      match /comments/{commentId} {
        allow read: if true;
        allow create: if isSignedIn();
        allow delete: if (isSignedIn() && isAuthor(commentId, 'blogPosts/$(postId)/comments')) || isAdmin();

        match /replies/{replyId} {
          allow read: if true;
          allow create: if isSignedIn();
          allow delete: if (isSignedIn() && isAuthor(replyId, 'blogPosts/$(postId)/comments/$(commentId)/replies')) || isAdmin();
        }
      }
    }

    match /shorts/{shortId} {
      allow read: if true;
      allow create: if isSignedIn() && request.resource.data.authorId == request.auth.uid;
      allow update: if (isSignedIn() && isAuthor(shortId, 'shorts')) || isAdmin();
      allow delete: if (isSignedIn() && isAuthor(shortId, 'shorts')) || isAdmin();
      
      match /comments/{commentId} {
        allow read: if true;
        allow create: if isSignedIn();
        allow delete: if (isSignedIn() && isAuthor(commentId, 'shorts/$(shortId)/comments')) || isAdmin();
      }
    }

    // PRIVATE MESSAGING
    match /chats/{chatId} {
      allow get, list: if isParticipant(chatId) || isAdmin();
      allow create: if isSignedIn() && request.auth.uid in request.resource.data.users;
      allow update: if isParticipant(chatId);
      allow delete: if isAdmin();

      match /messages/{messageId} {
        allow read, create: if isParticipant(chatId);
        allow update, delete: if isParticipant(chatId) && request.auth.uid == resource.data.senderId;
      }
    }
    
    // VERIFICATION SYSTEM
    match /verificationRequests/{requestId} {
      allow read, update, delete: if isAdmin();
      allow create: if isOwner(request.resource.data.userId);
    }

    // ADMIN & SITE MANAGEMENT
    match /announcements/{announcementId} {
      allow read: if true;
      allow write, delete: if isAdmin();
    }

    match /roster/{memberId} {
      allow read: if true;
      allow write, delete: if isAdmin();
    }
    
    match /games/{gameId} {
      allow read: if true;
      allow write, delete: if isAdmin();
    }
    
    match /heroImages/{imageId} {
       allow read: if true;
       allow write, delete: if isAdmin();
    }

    match /timelineEvents/{eventId} {
       allow read: if true;
       allow write, delete: if isAdmin();
    }
    
    match /coreValues/{valueId} {
       allow read: if true;
       allow write, delete: if isAdmin();
    }
    
    match /galleryImages/{imageId} {
       allow read: if true;
       allow write, delete: if isAdmin();
    }

    match /pageContent/{pageName} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /siteSettings/{settingId} {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}