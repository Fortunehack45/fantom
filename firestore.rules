rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is the admin
    function isAdmin() {
      return request.auth != null && request.auth.token.email == 'fortunedomination@gmail.com';
    }

    // Helper function to check if a user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }
    
    // Site content collections (blog, roster, etc.)
    // Allow public read for all, but only admin write.
    match /{collection}/{docId} where collection in ['blogPosts', 'roster', 'announcements', 'games', 'heroImages', 'timelineEvents', 'coreValues', 'galleryImages', 'siteSettings'] {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Comments on blog posts
    match /blogPosts/{postId}/comments/{commentId} {
      allow read: if true;
      
      // Allow logged-in users to create comments.
      // Allow the author of the comment or an admin to delete it.
      // Allow logged-in users to update (e.g., like) a comment.
      allow create: if isSignedIn();
      allow delete: if isAdmin() || (isSignedIn() && request.resource.data.authorId == request.auth.uid);
      allow update: if isSignedIn();
      
      // Replies to comments
      match /replies/{replyId} {
         allow read: if true;
         allow create: if isSignedIn();
         allow delete: if isAdmin() || (isSignedIn() && request.resource.data.authorId == request.auth.uid);
         allow update: if isSignedIn();
      }
    }
    
    // Default deny for any other collections/paths not specified above.
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
