
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // HELPER FUNCTIONS
    function isAdmin() {
      return request.auth.token.email == 'fortunedomination@gmail.com';
    }

    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(resource) {
      return isSignedIn() && request.auth.uid == resource.data.authorId;
    }

    // SITE SETTINGS (e.g., footer links)
    match /siteSettings/{setting} {
      allow read: if true;
      allow write: if isSignedIn() && isAdmin();
    }

    // BLOG POSTS
    match /blogPosts/{postId} {
      allow read: if true;
      allow write: if isSignedIn() && isAdmin();
      allow update: if isSignedIn() && request.resource.data.keys().hasOnly(['likes']);
    }

    // ROSTER
    match /roster/{docId} {
      allow read: if true;
      allow write: if isSignedIn() && isAdmin();
    }
    
    // ANNOUNCEMENTS
    match /announcements/{docId} {
        allow read: if true;
        allow write: if isSignedIn() && isAdmin();
    }

    // GAMES
    match /games/{docId} {
        allow read: if true;
        allow write: if isSignedIn() && isAdmin();
    }

    // HERO IMAGES
    match /heroImages/{docId} {
        allow read: if true;
        allow write: if isSignedIn() && isAdmin();
    }

    // GALLERY IMAGES
    match /galleryImages/{docId} {
        allow read: if true;
        allow write: if isSignedIn() && isAdmin();
    }

    // TIMELINE EVENTS
    match /timelineEvents/{docId} {
        allow read: if true;
        allow write: if isSignedIn() && isAdmin();
    }

    // CORE VALUES
    match /coreValues/{docId} {
        allow read: if true;
        allow write: if isSignedIn() && isAdmin();
    }

    // COMMENTS (Subcollection of blogPosts)
    match /blogPosts/{postId}/comments/{commentId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow delete: if isOwner(resource) || (isSignedIn() && isAdmin());
      allow update: if isOwner(resource) || (isSignedIn() && request.resource.data.keys().hasOnly(['likes']));
    }

    // REPLIES (Subcollection of comments)
    match /blogPosts/{postId}/comments/{commentId}/replies/{replyId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow delete: if isOwner(resource) || (isSignedIn() && isAdmin());
      allow update: if isOwner(resource) || (isSignedIn() && request.resource.data.keys().hasOnly(['likes']));
    }
  }
}
