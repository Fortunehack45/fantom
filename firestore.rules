rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    function isAdmin() {
      return isSignedIn() && request.auth.token.email == 'fortunedomination@gmail.com';
    }

    //----------------------------------------------------------------------
    //  USERS & USERNAMES
    //----------------------------------------------------------------------
    match /users/{userId} {
      allow get, list: if true;
      allow create: if isUser(userId) && request.resource.data.uid == userId;
      allow update: if (isUser(userId) && request.resource.data.verification == resource.data.verification) || isAdmin();
      allow delete: if isAdmin();
    }

    match /usernames/{username} {
      allow get: if true;
      allow create: if isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.username == username;
      allow delete: if isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.username == resource.data.username;
    }
    
    match /users/{userId}/followers/{followerId} {
      allow get, list: if true;
      allow create, delete: if isUser(followerId) || isAdmin();
    }
    
     match /users/{userId}/following/{followingId} {
      allow get, list: if true;
      allow create, delete: if isUser(userId) || isAdmin();
    }

    //----------------------------------------------------------------------
    //  CONTENT (Blog Posts & Shorts)
    //----------------------------------------------------------------------
    function isAuthorOrAdmin(authorId) {
      return isUser(authorId) || isAdmin();
    }

    match /blogPosts/{postId} {
      allow get, list: if true;
      allow create: if isSignedIn() && request.resource.data.authorId == request.auth.uid;
      allow update, delete: if isAuthorOrAdmin(resource.data.authorId);
    }

    match /shorts/{shortId} {
      allow get, list: if true;
      allow create: if isSignedIn() && request.resource.data.authorId == request.auth.uid;
      allow update, delete: if isAuthorOrAdmin(resource.data.authorId);
    }

    //----------------------------------------------------------------------
    //  COMMENTS & REPLIES
    //----------------------------------------------------------------------
    match /blogPosts/{postId}/comments/{commentId} {
      allow get, list: if true;
      allow create: if isSignedIn();
      allow update, delete: if isAuthorOrAdmin(resource.data.authorId);
    }
    
    match /shorts/{shortId}/comments/{commentId} {
       allow get, list: if true;
       allow create: if isSignedIn();
       allow update, delete: if isAuthorOrAdmin(resource.data.authorId);
    }

    match /blogPosts/{postId}/comments/{commentId}/replies/{replyId} {
      allow get, list: if true;
      allow create: if isSignedIn();
      allow update, delete: if isAuthorOrAdmin(resource.data.authorId);
    }
    
    // Collection group queries for admin tools
    match /{path=**}/comments/{commentId} {
      allow read, write: if isAdmin();
    }
    match /{path=**}/replies/{replyId} {
      allow read, write: if isAdmin();
    }


    //----------------------------------------------------------------------
    //  PRIVATE MESSAGING
    //----------------------------------------------------------------------
    match /chats/{chatId} {
      allow get, list: if request.auth.uid in resource.data.users || isAdmin();
      allow create: if request.auth.uid in request.resource.data.users;
      allow update: if request.auth.uid in resource.data.users;
    }

    match /chats/{chatId}/messages/{messageId} {
      allow read, create: if get(/databases/$(database)/documents/chats/$(chatId)).data.users.hasAny([request.auth.uid]);
    }

    //----------------------------------------------------------------------
    //  VERIFICATION
    //----------------------------------------------------------------------
    match /verificationRequests/{requestId} {
      allow create: if isUser(request.resource.data.userId);
      allow read, list, update, delete: if isAdmin();
    }

    //----------------------------------------------------------------------
    //  ADMIN-ONLY & SITE-WIDE CONTENT
    //----------------------------------------------------------------------
    match /announcements/{docId} {
      allow get, list: if true;
      allow create, update, delete: if isAdmin();
    }
    
    match /roster/{docId} {
      allow get, list: if true;
      allow create, update, delete: if isAdmin();
    }

    match /games/{docId} {
      allow get, list: if true;
      allow create, update, delete: if isAdmin();
    }

    match /heroImages/{docId} {
      allow get, list: if true;
      allow create, update, delete: if isAdmin();
    }
    
    match /timelineEvents/{docId} {
      allow get, list: if true;
      allow create, update, delete: if isAdmin();
    }
    
    match /coreValues/{docId} {
      allow get, list: if true;
      allow create, update, delete: if isAdmin();
    }

    match /galleryImages/{docId} {
      allow get, list: if true;
      allow create, update, delete: if isAdmin();
    }

    match /pageContent/{docId} {
      allow get, list: if true;
      allow create, update, delete: if isAdmin();
    }

    match /siteSettings/{docId} {
      allow get, list: if true;
      allow create, update, delete: if isAdmin();
    }
  }
}
