rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // ==============
    // Helper Functions
    // ==============
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      return request.auth.token.email == 'fortunedomination@gmail.com';
    }

    function isParticipant(chatId) {
        return request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.users;
    }

    // ==============
    // User Collections
    // ==============
    match /users/{userId} {
      allow get: true;
      allow list: true;
      allow create: if isOwner(userId)
                    && request.resource.data.username == request.auth.token.name
                    && request.resource.data.verification == 'None';
      allow update: if (isOwner(userId) && request.resource.data.verification == resource.data.verification) || isAdmin();
      allow delete: if isAdmin();
    }
    
    match /usernames/{username} {
        allow read: true;
        allow create: if isSignedIn() 
                      && request.resource.data.uid == request.auth.uid 
                      && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.username == username;
        allow delete: if isSignedIn() && resource.data.uid == request.auth.uid;
    }

    // ==============
    // Content Collections
    // ==============
    match /blogPosts/{postId} {
      allow get: true;
      allow list: true;
      allow create: if isSignedIn() && request.resource.data.authorId == request.auth.uid;
      allow update: if (isSignedIn() && resource.data.authorId == request.auth.uid) || isAdmin();
      allow delete: if (isSignedIn() && resource.data.authorId == request.auth.uid) || isAdmin();
      
      // Comments & Replies for Blog Posts
      match /comments/{commentId} {
        allow read: true;
        allow create: if isSignedIn();
        allow delete: if (isSignedIn() && resource.data.authorId == request.auth.uid) || isAdmin();
        
        match /replies/{replyId} {
          allow read: true;
          allow create: if isSignedIn();
          allow delete: if (isSignedIn() && resource.data.authorId == request.auth.uid) || isAdmin();
        }
      }
    }

    match /shorts/{shortId} {
      allow get: true;
      allow list: true;
      allow create: if isSignedIn() && request.resource.data.authorId == request.auth.uid;
      allow update: if (isSignedIn() && resource.data.authorId == request.auth.uid) || isAdmin();
      allow delete: if (isSignedIn() && resource.data.authorId == request.auth.uid) || isAdmin();
      
      // Comments for Shorts
      match /comments/{commentId} {
        allow read: true;
        allow create: if isSignedIn();
        allow delete: if (isSignedIn() && resource.data.authorId == request.auth.uid) || isAdmin();
      }
    }
    
    // ==============
    // Chat Collections
    // ==============
    match /chats/{chatId} {
      allow get: if isParticipant(chatId) || isAdmin();
      allow list: if isSignedIn();
      allow create: if isSignedIn() && request.auth.uid in request.resource.data.users;
      allow update: if isParticipant(chatId);
      allow delete: if isAdmin();
      
      match /messages/{messageId} {
        allow read, create: if isParticipant(chatId);
      }
    }

    // ==============
    // Admin & Site Management Collections
    // ==============
    match /verificationRequests/{requestId} {
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      allow read, update, delete: if isAdmin();
    }
    
    match /roster/{memberId} {
      allow read: true;
      allow create, update, delete: if isAdmin();
    }
    
    match /announcements/{announcementId} {
      allow read: true;
      allow create, update, delete: if isAdmin();
    }

    match /games/{gameId} {
      allow read: true;
      allow create, update, delete: if isAdmin();
    }

    match /heroImages/{imageId} {
      allow read: true;
      allow create, update, delete: if isAdmin();
    }
    
    match /timelineEvents/{eventId} {
      allow read: true;
      allow create, update, delete: if isAdmin();
    }
    
    match /coreValues/{valueId} {
      allow read: true;
      allow create, update, delete: if isAdmin();
    }
    
    match /galleryImages/{imageId} {
      allow read: true;
      allow create, update, delete: if isAdmin();
    }

    match /pageContent/{pageName} {
      allow read: true;
      allow create, update, delete: if isAdmin();
    }

    match /siteSettings/{settingsId} {
      allow read: true;
      allow create, update, delete: if isAdmin();
    }
  }
}