
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAdmin() {
      return request.auth != null && request.auth.token.email == 'fortunedomination@gmail.com';
    }

    match /users/{userId} {
      allow read; // Anyone can read a user's profile data
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
      
      match /followers/{followerId} {
        allow read;
        allow create, delete: if request.auth != null && (request.auth.uid == followerId || request.auth.uid == userId);
      }
      match /following/{followingId} {
        allow read;
        allow create, delete: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    match /usernames/{username} {
        allow read;
        allow create: if request.auth != null && request.resource.data.uid == request.auth.uid;
        allow delete: if request.auth != null && request.resource.data.uid == request.auth.uid;
    }

    match /blogPosts/{postId} {
      allow read;
      allow create: if request.auth != null && request.resource.data.authorId == request.auth.uid;
      allow update, delete: if request.auth != null && (request.resource.data.authorId == request.auth.uid || isAdmin());
        
      match /comments/{commentId} {
        allow read;
        allow create: if request.auth != null;
        allow delete: if request.auth != null && (request.resource.data.authorId == request.auth.uid || isAdmin());

          match /replies/{replyId} {
              allow read;
              allow create: if request.auth != null;
              allow delete: if request.auth != null && (request.resource.data.authorId == request.auth.uid || isAdmin());
          }
      }
    }
    
    match /shorts/{shortId} {
        allow read;
        allow create: if request.auth != null && request.resource.data.authorId == request.auth.uid;
        allow update, delete: if request.auth != null && (request.resource.data.authorId == request.auth.uid || isAdmin());

        match /comments/{commentId} {
            allow read;
            allow create: if request.auth != null;
            allow delete: if request.auth != null && (request.resource.data.authorId == request.auth.uid || isAdmin());
        }
    }
    
    match /verificationRequests/{requestId} {
        allow read, list, update, delete: if isAdmin();
        allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    match /chats/{chatId} {
        allow get, update: if request.auth != null && request.auth.uid in resource.data.users;
        allow list: if isAdmin(); // Admin can list chats for moderation
        allow create: if request.auth != null && request.auth.uid in request.resource.data.users;

        match /messages/{messageId} {
            allow read, create: if request.auth != null && get(/databases/$(database)/documents/chats/$(chatId)).data.users.hasAny([request.auth.uid]);
        }
    }
    
    // Site management collections, only writable by admin
    match /roster/{memberId} {
        allow read;
        allow create, update, delete: if isAdmin();
    }
    match /announcements/{announcementId} {
        allow read;
        allow create, update, delete: if isAdmin();
    }
     match /games/{gameId} {
        allow read;
        allow create, update, delete: if isAdmin();
    }
     match /heroImages/{imageId} {
        allow read;
        allow create, update, delete: if isAdmin();
    }
    match /timelineEvents/{eventId} {
        allow read;
        allow create, update, delete: if isAdmin();
    }
     match /coreValues/{valueId} {
        allow read;
        allow create, update, delete: if isAdmin();
    }
    match /galleryImages/{imageId} {
        allow read;
        allow create, update, delete: if isAdmin();
    }
     match /siteSettings/{settingId} {
        allow read;
        allow create, update, delete: if isAdmin();
    }
    match /pageContent/{pageId} {
        allow read;
        allow create, update, delete: if isAdmin();
    }
  }
}