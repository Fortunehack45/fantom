
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if the user is the administrator
    function isAdmin() {
      return request.auth != null && request.auth.token.email == 'fortunedomination@gmail.com';
    }

    // Helper function to check if a user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // Helper function to check if the user is the owner of a resource
    function isOwner(resource) {
        return request.auth.uid == resource.data.authorId;
    }

    // Rules for all top-level content collections
    // Allow public read access, but restrict writes to the admin
    match /{collection}/{docId}
      where collection in ['blogPosts', 'roster', 'announcements', 'games', 'heroImages', 'timelineEvents', 'coreValues', 'galleryImages'] {
      
      // Anyone can read the documents in these collections
      allow read: if true;

      // Only the admin can create, update, or delete documents
      allow write: if isAdmin();
    }
    
    // Rules for the 'comments' subcollection within 'blogPosts'
    match /blogPosts/{postId}/comments/{commentId} {
      
      // Anyone can read comments
      allow read: if true;
      
      // Only authenticated users can create comments
      allow create: if isSignedIn();

      // Only the author of the comment or an admin can update/delete it
      allow update, delete: if isOwner(resource) || isAdmin();
    }

    // Rules for the 'replies' subcollection within 'comments'
    match /blogPosts/{postId}/comments/{commentId}/replies/{replyId} {
        
        // Anyone can read replies
        allow read: if true;

        // Only authenticated users can create replies
        allow create: if isSignedIn();

        // Only the author of the reply or an admin can update/delete it
        allow update, delete: if isOwner(resource) || isAdmin();
    }
  }
}
