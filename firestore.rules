rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isAdmin() {
      return request.auth != null && request.auth.token.email == 'fortunedomination@gmail.com';
    }

    match /users/{userId} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if (request.auth != null && request.auth.uid == userId) || isAdmin();
      
      // Followers subcollection
      match /followers/{followerId} {
        allow read: if true;
        allow create, delete: if request.auth != null && (request.auth.uid == followerId || request.auth.uid == userId);
      }
      
      // Following subcollection
      match /following/{followingId} {
         allow read: if true;
         allow create, delete: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // This rule allows the query by username to work for profile pages
    match /users/{userId} {
        allow list: if true;
    }
    
    match /usernames/{username} {
        allow read: if true;
        allow create: if request.auth != null && request.resource.data.uid == request.auth.uid;
        allow delete: if request.auth != null && resource.data.uid == request.auth.uid;
    }
    
    match /blogPosts/{postId} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.authorId == request.auth.uid;
      allow update, delete: if (request.auth != null && resource.data.authorId == request.auth.uid) || isAdmin();
      
      // Comments and replies
      match /comments/{commentId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow update, delete: if (request.auth != null && resource.data.authorId == request.auth.uid) || isAdmin();
        
        match /replies/{replyId} {
            allow read: if true;
            allow create: if request.auth != null;
            allow update, delete: if (request.auth != null && resource.data.authorId == request.auth.uid) || isAdmin();
        }
      }
    }
    
     match /shorts/{shortId} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.authorId == request.auth.uid;
      allow update, delete: if (request.auth != null && resource.data.authorId == request.auth.uid) || isAdmin();

      match /comments/{commentId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow update, delete: if (request.auth != null && resource.data.authorId == request.auth.uid) || isAdmin();
      }
    }
    
    match /chats/{chatId} {
      allow read, create, update: if request.auth != null && request.auth.uid in resource.data.users;
      allow list: if request.auth != null && (request.auth.uid in request.query.where.users || isAdmin());
      
      match /messages/{messageId} {
        allow read, create: if request.auth != null && get(/databases/$(database)/documents/chats/$(chatId)).data.users.hasAny([request.auth.uid]);
      }
    }
    
    match /verificationRequests/{requestId} {
        allow read, list, update: if isAdmin();
        allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    match /announcements/{announcementId} {
        allow read: if true;
        allow create, update, delete: if isAdmin();
    }
    
    match /roster/{memberId} {
        allow read: if true;
        allow create, update, delete: if isAdmin();
    }

    match /games/{gameId} {
        allow read: if true;
        allow create, update, delete: if isAdmin();
    }

    match /heroImages/{imageId} {
        allow read: if true;
        allow create, update, delete: if isAdmin();
    }

    match /timelineEvents/{eventId} {
        allow read: if true;
        allow create, update, delete: if isAdmin();
    }

    match /coreValues/{valueId} {
        allow read: if true;
        allow create, update, delete: if isAdmin();
    }

    match /galleryImages/{imageId} {
        allow read: if true;
        allow create, update, delete: if isAdmin();
    }
    
    match /pageContent/{pageName} {
        allow read: if true;
        allow create, update, delete: if isAdmin();
    }
    
    match /siteSettings/{settingsId} {
        allow read: if true;
        allow create, update, delete: if isAdmin();
    }
  }
}