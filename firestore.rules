rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for Admin role
    function isAdmin() {
      return request.auth.token.email == 'fortunedomination@gmail.com';
    }

    // User profiles can be read by anyone, but only the user themselves or an admin can edit.
    match /users/{userId} {
      allow read: if true;
      allow create: if request.auth.uid == userId;
      allow update: if (request.auth.uid == userId && request.resource.data.verification == resource.data.verification) || isAdmin();
      allow delete: if isAdmin();

      // Followers/Following can be read by anyone
      match /followers/{followerId} {
        allow read: if true;
        allow create, delete: if request.auth.uid == followerId; // User adds/removes themself
      }
      match /following/{followingId} {
        allow read: if true;
        allow create, delete: if request.auth.uid == userId; // User modifies their own following list
      }
    }
    
    // Usernames collection to enforce uniqueness.
    match /usernames/{username} {
        allow read: if true;
        allow create: if exists(/databases/$(database)/documents/users/$(request.auth.uid))
                      && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.username == username;
        allow delete: if resource.data.uid == request.auth.uid || isAdmin();
    }

    // Public content like Blog Posts & Shorts
    match /blogPosts/{postId} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.authorId == request.auth.uid;
      allow update: if resource.data.authorId == request.auth.uid || isAdmin();
      allow delete: if resource.data.authorId == request.auth.uid || isAdmin();

      // Liking posts
      match /likes/{userId} {
        allow read: if true;
        allow create, delete: if request.auth.uid == userId;
      }
      
      // Comments & Replies
      match /comments/{commentId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow update, delete: if resource.data.authorId == request.auth.uid || isAdmin();

        match /replies/{replyId} {
          allow read: if true;
          allow create: if request.auth != null;
          allow update, delete: if resource.data.authorId == request.auth.uid || isAdmin();
        }
      }
    }

    match /shorts/{shortId} {
        allow read: if true;
        allow create: if request.auth != null && request.resource.data.authorId == request.auth.uid;
        allow update, delete: if resource.data.authorId == request.auth.uid || isAdmin();

        match /comments/{commentId} {
          allow read: if true;
          allow create: if request.auth != null;
          allow update, delete: if resource.data.authorId == request.auth.uid || isAdmin();
        }
    }

    // Private Messaging
    match /chats/{chatId} {
      allow read, write, update: if request.auth.uid in resource.data.users || isAdmin();
      
      match /messages/{messageId} {
        allow read, create: if get(/databases/$(database)/documents/chats/$(chatId)).data.users[0] == request.auth.uid 
                              || get(/databases/$(database)/documents/chats/$(chatId)).data.users[1] == request.auth.uid
                              || isAdmin();
      }
    }

    // Verification Requests - only admin can see/manage
    match /verificationRequests/{requestId} {
      allow read, list, update, delete: if isAdmin();
      allow create: if request.auth.uid == request.resource.data.userId;
    }

    // Admin-only collections
    match /roster/{memberId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /announcements/{announcementId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /games/{gameId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /heroImages/{imageId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /timelineEvents/{eventId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /coreValues/{valueId} {
      allow read: if true;
      allow write: if isAdmin();
    }
     match /galleryImages/{imageId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /siteSettings/{settingsId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /pageContent/{pageId} {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}